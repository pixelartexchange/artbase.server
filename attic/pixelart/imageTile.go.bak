

func (tile *Image) Circle() *Image {

	 bounds := tile.Bounds()
   width, height := bounds.Dx(), bounds.Dy()

	 // for radius use min of width / height
	 r := min( width, height ) / 2

   center_x := width  / 2
	 center_y := height / 2

   ////////
	 //  try with 96x96
	 //    center_x:  96 / 2 = 48
	 //    center_y:  96 / 2 = 48
   //
	 //     r:    96 / 2 = 48


	 // use color.Alpha{0} - why? why not?
	 transparent := color.NRGBA{ R: 0,
                            	 G: 0,
	                             B: 0,
	                             A: 0 }

   img := NewImage( width, height )

	 for x := 0; x < width; x++ {
     for y := 0; y < height; y++ {
         pixel := tile.At( bounds.Min.X+x,
										       bounds.Min.Y+y )

		xx, yy, rr := float64( x - center_x )+0.5,
		              float64( y - center_y )+0.5,
									float64( r )

						if xx*xx+yy*yy < rr*rr {
							img.Set(x, y, pixel )
						} else {
							img.Set( x,y, transparent )
						}
					}
		}
  	return img
}

